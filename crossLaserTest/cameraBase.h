//*************************************************************************
//说明：相机驱动的基类
//作者：ZZL
//发布时间：2018/03/30
/*备注：如需修改该接口，请先与作者进行确认,该接口用到了opencv的数据类型，需要配置
opencv才能使用
*/
//*************************************************************************
#ifndef CAMERABASE_H
#define CAMERABASE_H
#include "cv.h"
#include <vector>
using namespace std;

enum triggerMode
{
	SOFT_TRIGGER = 0, //软触发
	EXT_TRIGGER, //外触发
	VEIDO //视频流模式
};

class abstractCamera
{
public:
	abstractCamera() :Connected(false), err_inf("") {};
	virtual ~abstractCamera() {};
	//***************************************************************
	// 函数说明:    搜索在线相机
	// 返 回 值:    void
	// 参    数:    @camID output相机的ID,如果第三方驱动返回的相机ID不是string类型，封装者需进行手动映射成string类型
	// 备    注：   
	//***************************************************************
	virtual void searchCamera(vector<string> &camIDs) = 0;
	//***************************************************************
	// 函数说明:    连接相机
	// 返 回 值:    bool
	// 参    数:    
	// 备    注：   
	//***************************************************************
	virtual bool connectCamera(string camID) = 0;
	//***************************************************************
	// 函数说明:    断开连接
	// 返 回 值:    bool
	// 参    数:    
	// 备    注：   
	//***************************************************************
	virtual bool disconnectCamera() = 0;
	//***************************************************************
	// 函数说明:    获取一张图片
	// 返 回 值:    bool 
	// 参    数:    @image output获取的图片数据
	// 备    注：   
	//***************************************************************
	virtual bool captureImage(cv::Mat &image) = 0;

	//***************************************************************
	// 函数说明:    设置相机曝光时间
	// 返 回 值:    bool
	// 参    数:    @time input相机曝光时间
	// 备    注：   时间单位:ms
	//***************************************************************
	virtual bool setExposure(const double time) = 0;

	//***************************************************************
	// 函数说明:    设置相机增益
	// 返 回 值:    bool
	// 参    数:    @scaler input相机的增益大小
	// 备    注：   
	//***************************************************************
	virtual bool setGain(const double scaler) = 0;
	//***************************************************************
	// 函数说明:    设置触发模式
	// 返 回 值:    bool
	// 参    数:    @scaler input相机的增益大小
	// 备    注：   
	//***************************************************************
	virtual bool setTriggerMode(const triggerMode mode) = 0;

	//***************************************************************
	// 函数说明:    获取相机的曝光时间
	// 返 回 值:    bool
	// 参    数:    
	// 备    注：   
	//***************************************************************
	virtual bool getExposure(double &time) 
	{
		err_inf = "无此操作";
		return false;
	};
	//***************************************************************
	// 函数说明:    获取相机增益
	// 返 回 值:    bool
	// 参    数:    
	// 备    注：   
	//***************************************************************
	virtual bool getGain(double &scaler)
	{
		err_inf = "无此操作";
		return false;
	}
	
	string getError()
	{
		return err_inf;
	}
	
	bool isConnected(){
		return Connected;
	}
protected:
	string err_inf; //错误信息
	bool Connected; //是否已经连接
};

#endif